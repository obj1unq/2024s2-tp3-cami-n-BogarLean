import cosas.*
import camion.*

describe "test de camion y cosas" {
  test "todo peso es par" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    
    assert.that(camion.todoPesoPar())
  }
  
  test "alguno pesa ..." {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    
    assert.that(camion.hayAlgunoQuePesa(800))
    assert.that(camion.hayAlgunoQuePesa(500))

    camion.descargar(bumblebee)

    assert.notThat(camion.hayAlgunoQuePesa(800))
  }
  
  test "nivel de peligrosidad" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    
    assert.equals(knightRider, camion.elDeNivel(10))
    assert.equals(bumblebee, camion.elDeNivel(15))
    assert.throwsException({ camion.elDeNivel(17) })
  }
  
  test "excediendo el peso total" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    
    assert.equals(1000, camion.tara())
    assert.equals(2300, camion.pesoTotal())
    assert.notThat(camion.excedidoDePeso())
    
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidad(100)
    
    assert.notThat(camion.excedidoDePeso())
    
    paqueteDeLadrillos.cantidad(200)
    
    assert.that(camion.excedidoDePeso())
  }
  
  test "superar peligrosidad" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    
    assert.equals(#{bumblebee}, camion.objetosQueSuperanPeligrosidad(10))
  }
  
  test "objetos mas peligrosos que bumblebee" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    camion.cargar(bateriaAntiaerea)
    
    assert.equals(misiles, bateriaAntiaerea.estado())
    assert.equals(
      #{bateriaAntiaerea},
      camion.objetosMasPeligrososQue(bumblebee)
    )
  }
  
  test "circular en la ruta" {
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    camion.cargar(bateriaAntiaerea)

    assert.equals(2600, camion.pesoTotal())
    assert.that(camion.excedidoDePeso())
    assert.notThat(camion.puedeCircularEnRuta(5))

    camion.descargar(bateriaAntiaerea)

    assert.notThat(camion.excedidoDePeso())
    assert.that(camion.puedeCircularEnRuta(900))
    assert.notThat(camion.puedeCircularEnRuta(5))
  }
  test "nivel de peligrosidad del contenedor portuario" {
    contenedorPortuario.cosas().add(bumblebee)
    contenedorPortuario.cosas().add(knightRider)

    assert.equals(15, contenedorPortuario.nivelPeligrosidad())

    contenedorPortuario.cosas().add(bateriaAntiaerea)

    assert.equals(100, contenedorPortuario.nivelPeligrosidad())
  }
  test "peso del contenedor portuario" {
    assert.equals(100, contenedorPortuario.peso())

    contenedorPortuario.cosas().add(bumblebee)
    contenedorPortuario.cosas().add(knightRider)

    assert.equals(1400, contenedorPortuario.peso())
  }
  test "peso del embalaje de seguridad" {
    assert.equals(500, embalajeDeSeguridad.peso())

    embalajeDeSeguridad.cosa(bumblebee)

    assert.equals(800, embalajeDeSeguridad.peso())
  }
  test "nivel de peligrosidad del embalaje" {
    assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())

    embalajeDeSeguridad.cosa(bumblebee)

    assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())
  }
}